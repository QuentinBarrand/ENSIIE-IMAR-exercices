/*
 * Automatically generated by jrpcgen 1.0.7 on 09/10/14 11:56
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
import org.acplt.oncrpc.*;
import java.io.IOException;

import java.net.InetAddress;

import org.acplt.oncrpc.server.*;

/**
 */
public abstract class x2yServerStub extends OncRpcServerStub implements OncRpcDispatchable {

    public x2yServerStub()
           throws OncRpcException, IOException {
        this(0);
    }

    public x2yServerStub(int port)
           throws OncRpcException, IOException {
        this(null, port);
    }

    public x2yServerStub(InetAddress bindAddr, int port)
           throws OncRpcException, IOException {
        info = new OncRpcServerTransportRegistrationInfo [] {
            new OncRpcServerTransportRegistrationInfo(x2y.finance, 3),
        };
        transports = new OncRpcServerTransport [] {
            new OncRpcUdpServerTransport(this, bindAddr, port, info, 32768),
            new OncRpcTcpServerTransport(this, bindAddr, port, info, 32768)
        };
    }

    public void dispatchOncRpcCall(OncRpcCallInformation call, int program, int version, int procedure)
           throws OncRpcException, IOException {
        if ( version == 3 ) {
            switch ( procedure ) {
            case 1: {
                XdrFloat args$ = new XdrFloat();
                call.retrieveCall(args$);
                XdrFloat result$ = new XdrFloat(updateRate_3(args$.floatValue()));
                call.reply(result$);
                break;
            }
            case 2: {
                XdrFloat args$ = new XdrFloat();
                call.retrieveCall(args$);
                XdrFloat result$ = new XdrFloat(convert_x2y_3(args$.floatValue()));
                call.reply(result$);
                break;
            }
            default:
                call.failProcedureUnavailable();
            }
        } else {
            call.failProgramUnavailable();
        }
    }

    public abstract float updateRate_3(float value);

    public abstract float convert_x2y_3(float value);

}
// End of x2yServerStub.java
