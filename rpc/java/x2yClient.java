/*
 * Automatically generated by jrpcgen 1.0.7 on 09/10/14 11:56
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
import org.acplt.oncrpc.*;
import java.io.IOException;

import java.net.InetAddress;

/**
 * The class <code>x2yClient</code> implements the client stub proxy
 * for the finance remote program. It provides method stubs
 * which, when called, in turn call the appropriate remote method (procedure).
 */
public class x2yClient extends OncRpcClientStub {

    /**
     * Constructs a <code>x2yClient</code> client stub proxy object
     * from which the finance remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public x2yClient(InetAddress host, int protocol)
           throws OncRpcException, IOException {
        super(host, x2y.finance, 3, 0, protocol);
    }

    /**
     * Constructs a <code>x2yClient</code> client stub proxy object
     * from which the finance remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param port Port number at host where the remote program can be reached.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public x2yClient(InetAddress host, int port, int protocol)
           throws OncRpcException, IOException {
        super(host, x2y.finance, 3, port, protocol);
    }

    /**
     * Constructs a <code>x2yClient</code> client stub proxy object
     * from which the finance remote program can be accessed.
     * @param client ONC/RPC client connection object implementing a particular
     *   protocol.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public x2yClient(OncRpcClient client)
           throws OncRpcException, IOException {
        super(client);
    }

    /**
     * Constructs a <code>x2yClient</code> client stub proxy object
     * from which the finance remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param program Remote program number.
     * @param version Remote program version number.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public x2yClient(InetAddress host, int program, int version, int protocol)
           throws OncRpcException, IOException {
        super(host, program, version, 0, protocol);
    }

    /**
     * Constructs a <code>x2yClient</code> client stub proxy object
     * from which the finance remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param program Remote program number.
     * @param version Remote program version number.
     * @param port Port number at host where the remote program can be reached.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public x2yClient(InetAddress host, int program, int version, int port, int protocol)
           throws OncRpcException, IOException {
        super(host, program, version, port, protocol);
    }

    /**
     * Call remote procedure updateRate_3.
     * @param value parameter (of type float) to the remote procedure call.
     * @return Result from remote procedure call (of type float).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public float updateRate_3(float value)
           throws OncRpcException, IOException {
        XdrFloat args$ = new XdrFloat(value);
        XdrFloat result$ = new XdrFloat();
        client.call(x2y.updateRate_3, x2y.VERS, args$, result$);
        return result$.floatValue();
    }

    /**
     * Call remote procedure convert_x2y_3.
     * @param value parameter (of type float) to the remote procedure call.
     * @return Result from remote procedure call (of type float).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public float convert_x2y_3(float value)
           throws OncRpcException, IOException {
        XdrFloat args$ = new XdrFloat(value);
        XdrFloat result$ = new XdrFloat();
        client.call(x2y.convert_x2y_3, x2y.VERS, args$, result$);
        return result$.floatValue();
    }

}
// End of x2yClient.java
